{"ast":null,"code":"// File: src/data/categories.ts\n\nexport const categories = [{\n  id: 'art',\n  name: 'Art',\n  count: 466,\n  isNew: true,\n  subcategories: [{\n    id: 'art-painting',\n    name: 'Painting',\n    count: 150,\n    links: [{\n      name: 'Impressionism',\n      url: '/art/painting/impressionism'\n    }, {\n      name: 'Surrealism',\n      url: '/art/painting/surrealism'\n    }, {\n      name: 'Abstract',\n      url: '/art/painting/abstract'\n    }]\n  }, {\n    id: 'art-sculpture',\n    name: 'Sculpture',\n    count: 100,\n    links: [{\n      name: 'Modern Sculpture',\n      url: '/art/sculpture/modern'\n    }, {\n      name: 'Classical Sculpture',\n      url: '/art/sculpture/classical'\n    }]\n  }, {\n    id: 'art-photography',\n    name: 'Photography',\n    count: 216,\n    links: [{\n      name: 'Digital Photography',\n      url: '/art/photography/digital'\n    }, {\n      name: 'Film Photography',\n      url: '/art/photography/film'\n    }]\n  }]\n}, {\n  id: 'business',\n  name: 'Business',\n  count: 6426,\n  isNew: true,\n  subcategories: [{\n    id: 'business-finance',\n    name: 'Finance',\n    count: 2500,\n    links: [{\n      name: 'Stock Market',\n      url: '/business/finance/stock-market'\n    }, {\n      name: 'Personal Finance',\n      url: '/business/finance/personal'\n    }]\n  }, {\n    id: 'business-marketing',\n    name: 'Marketing',\n    count: 1800,\n    links: [{\n      name: 'Digital Marketing',\n      url: '/business/marketing/digital'\n    }, {\n      name: 'Content Marketing',\n      url: '/business/marketing/content'\n    }]\n  }, {\n    id: 'business-entrepreneurship',\n    name: 'Entrepreneurship',\n    count: 2126,\n    links: [{\n      name: 'Startups',\n      url: '/business/entrepreneurship/startups'\n    }, {\n      name: 'Small Business',\n      url: '/business/entrepreneurship/small-business'\n    }]\n  }]\n}, {\n  id: 'computers',\n  name: 'Computers',\n  count: 2609,\n  isNew: true,\n  subcategories: [{\n    id: 'computers-programming',\n    name: 'Programming',\n    count: 1200,\n    links: [{\n      name: 'JavaScript',\n      url: '/computers/programming/javascript'\n    }, {\n      name: 'Python',\n      url: '/computers/programming/python'\n    }, {\n      name: 'Java',\n      url: '/computers/programming/java'\n    }]\n  }, {\n    id: 'computers-hardware',\n    name: 'Hardware',\n    count: 800,\n    links: [{\n      name: 'CPUs',\n      url: '/computers/hardware/cpus'\n    }, {\n      name: 'GPUs',\n      url: '/computers/hardware/gpus'\n    }]\n  }, {\n    id: 'computers-networking',\n    name: 'Networking',\n    count: 609,\n    links: [{\n      name: 'Protocols',\n      url: '/computers/networking/protocols'\n    }, {\n      name: 'Security',\n      url: '/computers/networking/security'\n    }]\n  }]\n}, {\n  id: 'science',\n  name: 'Science',\n  count: 2634,\n  isNew: true,\n  subcategories: [{\n    id: 'science-physics',\n    name: 'Physics',\n    count: 1000,\n    links: [{\n      name: 'Quantum Mechanics',\n      url: '/science/physics/quantum-mechanics'\n    }, {\n      name: 'Relativity',\n      url: '/science/physics/relativity'\n    }]\n  }, {\n    id: 'science-biology',\n    name: 'Biology',\n    count: 934,\n    links: [{\n      name: 'Genetics',\n      url: '/science/biology/genetics'\n    }, {\n      name: 'Ecology',\n      url: '/science/biology/ecology'\n    }]\n  }, {\n    id: 'science-chemistry',\n    name: 'Chemistry',\n    count: 700,\n    links: [{\n      name: 'Organic Chemistry',\n      url: '/science/chemistry/organic'\n    }, {\n      name: 'Inorganic Chemistry',\n      url: '/science/chemistry/inorganic'\n    }]\n  }]\n}, {\n  id: 'health',\n  name: 'Health',\n  count: 1367,\n  isNew: true,\n  subcategories: [{\n    id: 'health-nutrition',\n    name: 'Nutrition',\n    count: 500,\n    links: [{\n      name: 'Diets',\n      url: '/health/nutrition/diets'\n    }, {\n      name: 'Supplements',\n      url: '/health/nutrition/supplements'\n    }]\n  }, {\n    id: 'health-fitness',\n    name: 'Fitness',\n    count: 467,\n    links: [{\n      name: 'Cardio',\n      url: '/health/fitness/cardio'\n    }, {\n      name: 'Strength Training',\n      url: '/health/fitness/strength-training'\n    }]\n  }, {\n    id: 'health-mental-health',\n    name: 'Mental Health',\n    count: 400,\n    links: [{\n      name: 'Stress Management',\n      url: '/health/mental-health/stress-management'\n    }, {\n      name: 'Depression',\n      url: '/health/mental-health/depression'\n    }]\n  }]\n}, {\n  id: 'entertainment',\n  name: 'Entertainment',\n  count: 6199,\n  isNew: true,\n  subcategories: [{\n    id: 'entertainment-movies',\n    name: 'Movies',\n    count: 2500,\n    links: [{\n      name: 'Action',\n      url: '/entertainment/movies/action'\n    }, {\n      name: 'Comedy',\n      url: '/entertainment/movies/comedy'\n    }]\n  }, {\n    id: 'entertainment-music',\n    name: 'Music',\n    count: 2000,\n    links: [{\n      name: 'Rock',\n      url: '/entertainment/music/rock'\n    }, {\n      name: 'Hip Hop',\n      url: '/entertainment/music/hip-hop'\n    }]\n  }, {\n    id: 'entertainment-games',\n    name: 'Games',\n    count: 1699,\n    links: [{\n      name: 'Video Games',\n      url: '/entertainment/games/video-games'\n    }, {\n      name: 'Board Games',\n      url: '/entertainment/games/board-games'\n    }]\n  }]\n}];\nexport function getCategoryById(id, categoryList = categories) {\n  for (const category of categoryList) {\n    if (category.id === id) {\n      return category;\n    }\n    if (category.subcategories) {\n      const found = getCategoryById(id, category.subcategories);\n      if (found) return found;\n    }\n  }\n  return undefined;\n}\nexport function getCategoryPath(id) {\n  const path = [];\n  function findPath(categoryList, targetId) {\n    for (const category of categoryList) {\n      path.push(category);\n      if (category.id === targetId) {\n        return true;\n      }\n      if (category.subcategories && findPath(category.subcategories, targetId)) {\n        return true;\n      }\n      path.pop();\n    }\n    return false;\n  }\n  findPath(categories, id);\n  return path;\n}\nexport function getAllNewCategories() {\n  const newCategories = [];\n  function findNewCategories(categoryList) {\n    for (const category of categoryList) {\n      if (category.isNew) {\n        newCategories.push(category);\n      }\n      if (category.subcategories) {\n        findNewCategories(category.subcategories);\n      }\n    }\n  }\n  findNewCategories(categories);\n  return newCategories;\n}","map":{"version":3,"names":["categories","id","name","count","isNew","subcategories","links","url","getCategoryById","categoryList","category","found","undefined","getCategoryPath","path","findPath","targetId","push","pop","getAllNewCategories","newCategories","findNewCategories"],"sources":["/Users/metanorm/Documents/reactdev/alieninternet/src/data/categories.ts"],"sourcesContent":["// File: src/data/categories.ts\n\nexport interface Link {\n  name: string;\n  url: string;\n}\n\nexport interface Category {\n  id: string;\n  name: string;\n  count: number;\n  isNew?: boolean;\n  subcategories?: Category[];\n  links?: Link[];\n}\n\nexport const categories: Category[] = [\n  {\n    id: 'art',\n    name: 'Art',\n    count: 466,\n    isNew: true,\n    subcategories: [\n      {\n        id: 'art-painting',\n        name: 'Painting',\n        count: 150,\n        links: [\n          { name: 'Impressionism', url: '/art/painting/impressionism' },\n          { name: 'Surrealism', url: '/art/painting/surrealism' },\n          { name: 'Abstract', url: '/art/painting/abstract' },\n        ],\n      },\n      {\n        id: 'art-sculpture',\n        name: 'Sculpture',\n        count: 100,\n        links: [\n          { name: 'Modern Sculpture', url: '/art/sculpture/modern' },\n          { name: 'Classical Sculpture', url: '/art/sculpture/classical' },\n        ],\n      },\n      {\n        id: 'art-photography',\n        name: 'Photography',\n        count: 216,\n        links: [\n          { name: 'Digital Photography', url: '/art/photography/digital' },\n          { name: 'Film Photography', url: '/art/photography/film' },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'business',\n    name: 'Business',\n    count: 6426,\n    isNew: true,\n    subcategories: [\n      {\n        id: 'business-finance',\n        name: 'Finance',\n        count: 2500,\n        links: [\n          { name: 'Stock Market', url: '/business/finance/stock-market' },\n          { name: 'Personal Finance', url: '/business/finance/personal' },\n        ],\n      },\n      {\n        id: 'business-marketing',\n        name: 'Marketing',\n        count: 1800,\n        links: [\n          { name: 'Digital Marketing', url: '/business/marketing/digital' },\n          { name: 'Content Marketing', url: '/business/marketing/content' },\n        ],\n      },\n      {\n        id: 'business-entrepreneurship',\n        name: 'Entrepreneurship',\n        count: 2126,\n        links: [\n          { name: 'Startups', url: '/business/entrepreneurship/startups' },\n          { name: 'Small Business', url: '/business/entrepreneurship/small-business' },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'computers',\n    name: 'Computers',\n    count: 2609,\n    isNew: true,\n    subcategories: [\n      {\n        id: 'computers-programming',\n        name: 'Programming',\n        count: 1200,\n        links: [\n          { name: 'JavaScript', url: '/computers/programming/javascript' },\n          { name: 'Python', url: '/computers/programming/python' },\n          { name: 'Java', url: '/computers/programming/java' },\n        ],\n      },\n      {\n        id: 'computers-hardware',\n        name: 'Hardware',\n        count: 800,\n        links: [\n          { name: 'CPUs', url: '/computers/hardware/cpus' },\n          { name: 'GPUs', url: '/computers/hardware/gpus' },\n        ],\n      },\n      {\n        id: 'computers-networking',\n        name: 'Networking',\n        count: 609,\n        links: [\n          { name: 'Protocols', url: '/computers/networking/protocols' },\n          { name: 'Security', url: '/computers/networking/security' },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'science',\n    name: 'Science',\n    count: 2634,\n    isNew: true,\n    subcategories: [\n      {\n        id: 'science-physics',\n        name: 'Physics',\n        count: 1000,\n        links: [\n          { name: 'Quantum Mechanics', url: '/science/physics/quantum-mechanics' },\n          { name: 'Relativity', url: '/science/physics/relativity' },\n        ],\n      },\n      {\n        id: 'science-biology',\n        name: 'Biology',\n        count: 934,\n        links: [\n          { name: 'Genetics', url: '/science/biology/genetics' },\n          { name: 'Ecology', url: '/science/biology/ecology' },\n        ],\n      },\n      {\n        id: 'science-chemistry',\n        name: 'Chemistry',\n        count: 700,\n        links: [\n          { name: 'Organic Chemistry', url: '/science/chemistry/organic' },\n          { name: 'Inorganic Chemistry', url: '/science/chemistry/inorganic' },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'health',\n    name: 'Health',\n    count: 1367,\n    isNew: true,\n    subcategories: [\n      {\n        id: 'health-nutrition',\n        name: 'Nutrition',\n        count: 500,\n        links: [\n          { name: 'Diets', url: '/health/nutrition/diets' },\n          { name: 'Supplements', url: '/health/nutrition/supplements' },\n        ],\n      },\n      {\n        id: 'health-fitness',\n        name: 'Fitness',\n        count: 467,\n        links: [\n          { name: 'Cardio', url: '/health/fitness/cardio' },\n          { name: 'Strength Training', url: '/health/fitness/strength-training' },\n        ],\n      },\n      {\n        id: 'health-mental-health',\n        name: 'Mental Health',\n        count: 400,\n        links: [\n          { name: 'Stress Management', url: '/health/mental-health/stress-management' },\n          { name: 'Depression', url: '/health/mental-health/depression' },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'entertainment',\n    name: 'Entertainment',\n    count: 6199,\n    isNew: true,\n    subcategories: [\n      {\n        id: 'entertainment-movies',\n        name: 'Movies',\n        count: 2500,\n        links: [\n          { name: 'Action', url: '/entertainment/movies/action' },\n          { name: 'Comedy', url: '/entertainment/movies/comedy' },\n        ],\n      },\n      {\n        id: 'entertainment-music',\n        name: 'Music',\n        count: 2000,\n        links: [\n          { name: 'Rock', url: '/entertainment/music/rock' },\n          { name: 'Hip Hop', url: '/entertainment/music/hip-hop' },\n        ],\n      },\n      {\n        id: 'entertainment-games',\n        name: 'Games',\n        count: 1699,\n        links: [\n          { name: 'Video Games', url: '/entertainment/games/video-games' },\n          { name: 'Board Games', url: '/entertainment/games/board-games' },\n        ],\n      },\n    ],\n  },\n];\n\nexport function getCategoryById(id: string, categoryList: Category[] = categories): Category | undefined {\n  for (const category of categoryList) {\n    if (category.id === id) {\n      return category;\n    }\n    if (category.subcategories) {\n      const found = getCategoryById(id, category.subcategories);\n      if (found) return found;\n    }\n  }\n  return undefined;\n}\n\nexport function getCategoryPath(id: string): Category[] {\n  const path: Category[] = [];\n  function findPath(categoryList: Category[], targetId: string): boolean {\n    for (const category of categoryList) {\n      path.push(category);\n      if (category.id === targetId) {\n        return true;\n      }\n      if (category.subcategories && findPath(category.subcategories, targetId)) {\n        return true;\n      }\n      path.pop();\n    }\n    return false;\n  }\n  findPath(categories, id);\n  return path;\n}\n\nexport function getAllNewCategories(): Category[] {\n  const newCategories: Category[] = [];\n  function findNewCategories(categoryList: Category[]) {\n    for (const category of categoryList) {\n      if (category.isNew) {\n        newCategories.push(category);\n      }\n      if (category.subcategories) {\n        findNewCategories(category.subcategories);\n      }\n    }\n  }\n  findNewCategories(categories);\n  return newCategories;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}